/* some very targetted corrections to roll back nameclashes between
 * Moodle and Bootstrap like .row, .label, .content, .controls
 *
 * Mostly relies on these styles being more specific than the Bootstrap
 * ones in order to overule them.
 */

/* YUI vs tables
 * 
 * It seems a bit crazy but YUI appears to be adding ugly borders to
 * all table cells,.
 * 
 * YUI gets included before user styles so this has precedence,
 * might make some YUI things look funny though if they expect padding.
 */
th,td {
    border: none;
    padding: 0;
}

/* Not sure why I need to set this, min-height is already set but
 * seems to be getting ignored.
 */
html {
    height: 100%;
}
body {
    min-height: 100%;
}

/* .label vs .label
 */

li.activity.label,
.file-picker td.label,
.userprofile th.label {
  background: inherit;
  color: inherit;
  border: inherit;
  text-shadow: none;
  padding: 4px 8px;
  white-space: normal;
  display: table-cell;
}
.file-picker td.label,
.userprofile table.list tr th.label {
  text-align: right;
}

// Some of this dialog is sized in ems so a different font size
// effects the whole layout.
.choosercontainer #chooseform .option label {
    font-size: 12px;
}

/* block.invisible vs .invisible
 * block.hidden vs .invisible
 *
 * uses .invisible where the rest of Moodle uses .dimmed
 * fixible in block renderer?
 *
 * There's seems to be even more naming confusion here since,
 * blocks can be actually 'visible' (or not) to students,
 * marked 'visible' but really just dimmed to indicate to editors
 * that students can't see them or  'visible' to the user who 
 * collapses them, 'visible' if you have the right role and in 
 * different circumstances different sections of a block can
 * be 'visible' or not.
 *
 * currently worked around in renderers.php function block{}
 * by rewriting the class name "invisible" to "dimmed",
 * though the blocks don't look particularly different apart
 * from their contents disappearing. Maybe try .muted? or
 * dimming all the edit icons apart from unhide, might be a 
 * nice effect, though they'd still be active. Maybe reverse
 * it to white?
 */

li.section.hidden,
.block.hidden,
.block.invisible {
  visibility: visible;
  display: block;
}


/* .row vs .row
 * 
 * very tricky to track down this when it goes wrong,
 * since the styles are applied to generated content
 *
 * basically if you see things shifted left or right compared
 * with where they should be check for a .row
 */

#turnitintool_style .row,
.forumpost .row {
  margin-left: 0 !important;
  // not sure if this needs !important
}
#turnitintool_style .row:before, 
#turnitintool_style .row:after,
.forumpost .row:before,
.forumpost .row:after {
  content: none;
}
/* fieldset.hidden vs .hidden
 *
 * Moodle uses fieldset.hidden for mforms, to signify a collection of
 * form elements that don't have a box drawn round them. Bootstrap
 * uses hidden for stuff that is hidden in various responsive modes.
 */

fieldset.hidden {
    display: block;
    visibility: visible;
}

/* .controls vs .controls
 *
 * in expanding course list, can be fixed in renderer though
 */


/* .btn vs .btn
 *
 * links, inputs and buttons are commonly styled with .btn in
 * bootstrap but it seems that some buttons in Moodle are
 * wrapped in div.btn e.g. the login block's "login" button
 */

div.c1.btn {
    display: block;
    padding: 0;
    margin-bottom: 0px;
    font-size: inherit;
    line-height: inherit;
    text-align: inherit;
    vertical-align: inherit;
    cursor: normal;
    color: inherit;
    text-shadow: inherit;
    background-color: inherit;
    background-image: none;
    background-repeat: none;
    border: none;
    border-radius: none;
    box-shadow: none;
}
/* .container vs .container
 *
 * bootstrap uses .container to set the width of the layout at 960px or so, Moodle uses it
 * in the Quiz to contain the questions to add. If you don't overule the Bootstrap code,
 * it becomes near unuseable. 
 */

